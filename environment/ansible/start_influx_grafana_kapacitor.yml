---

# reporting changed for docker-compose, touch
# Must parametrise the user and password for correct 

- hosts: server
  become: true
  gather_facts: no

  pre_tasks:

  - name: Retriving secrets
    include_vars: "secrets.yml"
    no_log: true

  - name: Pre-staging phase - including configuration variables
    include_vars:
      file: env.yml
    no_log: True
    tags:
      - debug

  - name: Checking services facts
    service_facts:
    register: service_info

  tasks:

  # Assure it is not created as root:root
  - name: Create data directory
    file:
      state: directory
      path: "{{ data_path }}"
      owner: "{{ user_id }}"
      group: "{{ group_id }}"
    become: false

  - name: Create log directory
    file:
      state: directory
      path: "{{log_path}}"
      owner: "{{ user_id }}"
      group: "{{ group_id }}"
    become: false

  - name: Start Influxdb
    service:
      name: influxdb
      state: started
    when: "'influxdb.service' in services"
    
  - name: Start Grafana-server service
    service:
      name: grafana-server
      state: started
    when: "'grafana-server.service' in services"
      
  - name: Pause 10 seconds to let Influx and Grafana start before configuring
    pause:
      seconds: 10  

  - name: Creating mdt_db database 
    #  curl -i -XPOST http://localhost:8086/query --data-urlencode "q=CREATE DATABASE mdt_db with duration 6h replication 1 shard duration 1h name test6h"
    # Tested with CURL that return state is 200 and not 201 as should be for create on POST
    uri: 
      url: http://localhost:8086/query
      method: POST
      body: "q=CREATE DATABASE mdt_db with duration 6h replication 1 shard duration 1h name test6h"
      status_code: 200

  - name: Check if InfluxDB datasource exist Grafana
    uri:
      url: http://localhost:3000/api/datasources/InfluxDB
      user: admin
      password: admin
      force_basic_auth: yes
    register: datasource_status
    failed_when: false
    changed_when: false

  #- debug: var=datasource_status

  - name: Adding the InfluxDB datasource in Grafana
   # curl -s 'http://admin:admin@127.0.0.1:3000/api/datasources' -X POST -H   'Content-Type: application/json;charset=UTF-8' --data-binary '{"name":"InfluxDB","type":"influxdb","access":"proxy","url":"http://environment_influxdb_1:8086","password":"admin","user":"admin","database":"mdt_db","basicAuth":false,"basicAuthUser":"","basicAuthPassword":"","withCredentials":false,"isDefault":false,"jsonData":{},"tlsAuth":{"tlsCACertSet":false,"tlsClientCertSet":false,"tlsClientKeySet":false}}'
    uri:
      url: http://localhost:3000/api/datasources
      method: POST
      user: admin
      password: admin
      body: 
        name: "InfluxDB"
        type: "influxdb"
        url: "http://localhost:8086"
        access: "proxy"
        isDefault: true
        database: "mdt_db"
      force_basic_auth: yes
      status_code: 200
      body_format: json
    when: datasource_status.status == 404

  - name: Update pipeline.conf for Influx 
    blockinfile:
      path: "{{env_path}}/pipeline.conf"
      marker: "#<!-- {mark} Ansible Managed  - Influx Config -->"
      block: "{{ lookup('file', 'templates/influx.cfg') }}"

  - name: Reload Pipeline (init)
    service:
      name: pipeline
      state: restarted
    when: service_info.ansible_facts.services["pipeline.service"].state == "running"
